
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
  let function some_0 (self : t_option 't) : 't = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_None -> any 't
      | C_Some a -> a
      end
end
module CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_node 'v =
    | C_Node 'v (Core_Option_Option_Type.t_option (t_node 'v))
    
  let function node_next (self : t_node 'v) : Core_Option_Option_Type.t_option (t_node 'v)
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Node _ a -> a
      end
  let function node_v (self : t_node 'v) : 'v = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_Node a _ -> a
      end
end
module CargoDir_Impl0_LenLogic_Stub
  type v
  use prelude.Int
  use CargoDir_Node_Type as CargoDir_Node_Type
  function len_logic [#"../src/lib.rs" 24 4 24 38] (self : CargoDir_Node_Type.t_node v) : int
end
module CargoDir_Impl0_LenLogic_Interface
  type v
  use prelude.Int
  use CargoDir_Node_Type as CargoDir_Node_Type
  function len_logic [#"../src/lib.rs" 24 4 24 38] (self : CargoDir_Node_Type.t_node v) : int
  val len_logic [#"../src/lib.rs" 24 4 24 38] (self : CargoDir_Node_Type.t_node v) : int
    ensures { result = len_logic self }
    
end
module CargoDir_Impl0_LenLogic
  type v
  use prelude.Int
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  function len_logic [#"../src/lib.rs" 24 4 24 38] (self : CargoDir_Node_Type.t_node v) : int =
    [#"../src/lib.rs" 23 4 23 12] let CargoDir_Node_Type.C_Node _ next = self in 1 + match (next) with
      | Core_Option_Option_Type.C_Some next -> len_logic next
      | Core_Option_Option_Type.C_None -> 0
      end
  val len_logic [#"../src/lib.rs" 24 4 24 38] (self : CargoDir_Node_Type.t_node v) : int
    ensures { result = len_logic self }
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../creusot/creusot-contracts/src/invariant.rs" 16 4 16 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CargoDir_Impl1_ShallowModel_Stub
  type v
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  function shallow_model [#"../src/lib.rs" 50 4 50 36] (self : CargoDir_Node_Type.t_node v) : Seq.seq v
end
module CargoDir_Impl1_ShallowModel_Interface
  type v
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  function shallow_model [#"../src/lib.rs" 50 4 50 36] (self : CargoDir_Node_Type.t_node v) : Seq.seq v
  val shallow_model [#"../src/lib.rs" 50 4 50 36] (self : CargoDir_Node_Type.t_node v) : Seq.seq v
    ensures { result = shallow_model self }
    
end
module CargoDir_Impl1_ShallowModel
  type v
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  function shallow_model [#"../src/lib.rs" 50 4 50 36] (self : CargoDir_Node_Type.t_node v) : Seq.seq v =
    [#"../src/lib.rs" 51 8 57 9] let CargoDir_Node_Type.C_Node v next = self in Seq.(++) (Seq.singleton v) (match (next) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some node -> shallow_model node
      end)
  val shallow_model [#"../src/lib.rs" 50 4 50 36] (self : CargoDir_Node_Type.t_node v) : Seq.seq v
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModelTy_Type
  type self
  type shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Stub
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_ShallowModel_ShallowModel_Interface
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_ShallowModel_ShallowModel
  type self
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = self
  function shallow_model (self : self) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : self) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Std1_Boxed_Impl1_ShallowModel_Stub
  type t
  type a
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Std1_Boxed_Impl1_ShallowModel_Interface
  type t
  type a
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Std1_Boxed_Impl1_ShallowModel
  type t
  type a
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot/creusot-contracts/src/std/boxed.rs" 20 8 20 31] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module TyInv_Trivial
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  axiom inv_trivial : forall self : t . Inv0.inv self = true
end
module CargoDir_Impl0_New_Interface
  type v
  use seq.Seq
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CargoDir_Node_Type as CargoDir_Node_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = CargoDir_Node_Type.t_node v
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel_Stub as ShallowModel1 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CargoDir_Impl1_ShallowModel_Stub as ShallowModel0 with
    type v = v
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = v
  val new [#"../src/lib.rs" 38 4 38 52] (v : v) (next : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)) : CargoDir_Node_Type.t_node v
    requires {[#"../src/lib.rs" 38 11 38 12] Inv0.inv v}
    requires {[#"../src/lib.rs" 38 17 38 21] Inv1.inv next}
    ensures { [#"../src/lib.rs" 34 4 37 9] Seq.(==) (ShallowModel0.shallow_model result) (Seq.(++) (Seq.singleton v) (match (next) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some n -> ShallowModel1.shallow_model n
      end)) }
    ensures { [#"../src/lib.rs" 38 48 38 52] Inv2.inv result }
    
end
module CargoDir_Impl0_New
  type v
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = CargoDir_Node_Type.t_node v
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv2.inv,
    axiom .
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = v
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = v,
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CargoDir_Impl1_ShallowModel as ShallowModel0 with
    type v = v
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel1 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  let rec cfg new [#"../src/lib.rs" 38 4 38 52] [@cfg:stackify] [@cfg:subregion_analysis] (v : v) (next : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)) : CargoDir_Node_Type.t_node v
    requires {[#"../src/lib.rs" 38 11 38 12] Inv0.inv v}
    requires {[#"../src/lib.rs" 38 17 38 21] Inv1.inv next}
    ensures { [#"../src/lib.rs" 34 4 37 9] Seq.(==) (ShallowModel0.shallow_model result) (Seq.(++) (Seq.singleton v) (match (next) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some n -> ShallowModel1.shallow_model n
      end)) }
    ensures { [#"../src/lib.rs" 38 48 38 52] Inv2.inv result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CargoDir_Node_Type.t_node v;
  var v : v = v;
  var next : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v) = next;
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    _0 <- CargoDir_Node_Type.C_Node v next;
    v <- any v;
    next <- any Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
    goto BB2
  }
  BB2 {
    goto BB3
  }
  BB3 {
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    return _0
  }
  
end
module CargoDir_LinkedList_Type
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_linkedlist 'v =
    | C_LinkedList (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node 'v))
    
  let function linkedlist_head (self : t_linkedlist 'v) : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node 'v)
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_LinkedList a -> a
      end
end
module CargoDir_Impl2_ShallowModel_Stub
  type v
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  function shallow_model [#"../src/lib.rs" 69 4 69 50] (self : CargoDir_LinkedList_Type.t_linkedlist v) : Seq.seq v
end
module CargoDir_Impl2_ShallowModel_Interface
  type v
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  function shallow_model [#"../src/lib.rs" 69 4 69 50] (self : CargoDir_LinkedList_Type.t_linkedlist v) : Seq.seq v
  val shallow_model [#"../src/lib.rs" 69 4 69 50] (self : CargoDir_LinkedList_Type.t_linkedlist v) : Seq.seq v
    ensures { result = shallow_model self }
    
end
module CargoDir_Impl2_ShallowModel
  type v
  use seq.Seq
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  use CargoDir_Node_Type as CargoDir_Node_Type
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel_Stub as ShallowModel0 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v
  use Core_Option_Option_Type as Core_Option_Option_Type
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  function shallow_model [#"../src/lib.rs" 69 4 69 50] (self : CargoDir_LinkedList_Type.t_linkedlist v) : Seq.seq v =
    [#"../src/lib.rs" 71 12 74 13] match (CargoDir_LinkedList_Type.linkedlist_head self) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some node -> ShallowModel0.shallow_model node
      end
  val shallow_model [#"../src/lib.rs" 69 4 69 50] (self : CargoDir_LinkedList_Type.t_linkedlist v) : Seq.seq v
    ensures { result = shallow_model self }
    
end
module CargoDir_Impl3_New_Interface
  type v
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone CargoDir_Impl2_ShallowModel_Stub as ShallowModel0 with
    type v = v
  val new [#"../src/lib.rs" 87 4 87 24] (_1 : ()) : CargoDir_LinkedList_Type.t_linkedlist v
    ensures { [#"../src/lib.rs" 86 14 86 40] ShallowModel0.shallow_model result = Seq.empty  }
    ensures { [#"../src/lib.rs" 87 20 87 24] Inv0.inv result }
    
end
module CargoDir_Impl3_New
  type v
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CargoDir_Impl1_ShallowModel as ShallowModel2 with
    type v = v
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    predicate Inv0.inv = Inv0.inv,
    axiom .
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel1 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CargoDir_Impl2_ShallowModel as ShallowModel0 with
    type v = v,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  let rec cfg new [#"../src/lib.rs" 87 4 87 24] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : CargoDir_LinkedList_Type.t_linkedlist v
    ensures { [#"../src/lib.rs" 86 14 86 40] ShallowModel0.shallow_model result = Seq.empty  }
    ensures { [#"../src/lib.rs" 87 20 87 24] Inv0.inv result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : CargoDir_LinkedList_Type.t_linkedlist v;
  {
    goto BB0
  }
  BB0 {
    _0 <- CargoDir_LinkedList_Type.C_LinkedList (Core_Option_Option_Type.C_None);
    goto BB1
  }
  BB1 {
    return _0
  }
  
end
module CreusotContracts_Model_Impl7_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl7_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl7_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot/creusot-contracts/src/model.rs" 101 8 101 31] ShallowModel0.shallow_model ( * self)
  val shallow_model (self : borrowed t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve_Stub
  type self
  predicate resolve (self : self)
end
module CreusotContracts_Resolve_Resolve_Resolve_Interface
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Resolve_Resolve
  type self
  predicate resolve (self : self)
  val resolve (self : self) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve_Stub
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module CreusotContracts_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
    [#"../../../../creusot/creusot-contracts/src/resolve.rs" 25 20 25 34]  ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module Core_Option_Impl0_Take_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = Core_Option_Option_Type.t_option t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (Core_Option_Option_Type.t_option t)
  val take (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot/creusot-contracts/src/std/option.rs" 17 0 114 1] result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    ensures { Inv1.inv result }
    
end
module Core_Option_Impl0_Unwrap_Interface
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  val unwrap (self : Core_Option_Option_Type.t_option t) : t
    requires {[#"../../../../creusot/creusot-contracts/src/std/option.rs" 17 0 114 1] self <> Core_Option_Option_Type.C_None}
    requires {Inv0.inv self}
    ensures { [#"../../../../creusot/creusot-contracts/src/std/option.rs" 17 0 114 1] Core_Option_Option_Type.C_Some result = self }
    ensures { Inv1.inv result }
    
end
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as Core_Marker_PhantomData_Type
  use Core_Ptr_NonNull_NonNull_Type as Core_Ptr_NonNull_NonNull_Type
  type t_unique 't =
    | C_Unique (Core_Ptr_NonNull_NonNull_Type.t_nonnull 't) (Core_Marker_PhantomData_Type.t_phantomdata 't)
    
end
module Alloc_Boxed_Box_Type
  use Core_Ptr_Unique_Unique_Type as Core_Ptr_Unique_Unique_Type
  type t_box 't 'a =
    | C_Box (Core_Ptr_Unique_Unique_Type.t_unique 't) 'a
    
end
module CargoDir_Impl3_Pop_Interface
  type v
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use seq_ext.SeqExt
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = v
  clone CargoDir_Impl2_ShallowModel_Stub as ShallowModel1 with
    type v = v
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v)
  clone CreusotContracts_Model_Impl7_ShallowModel_Stub as ShallowModel0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v
  val pop [#"../src/lib.rs" 98 4 98 30] (self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v)) : v
    requires {[#"../src/lib.rs" 95 15 95 30] Seq.length (ShallowModel0.shallow_model self) > 0}
    requires {[#"../src/lib.rs" 98 20 98 24] Inv0.inv self}
    ensures { [#"../src/lib.rs" 96 14 96 32] result = Seq.get (ShallowModel0.shallow_model self) 0 }
    ensures { [#"../src/lib.rs" 97 4 97 72] Seq.(==) (ShallowModel1.shallow_model ( ^ self)) (SeqExt.subsequence (ShallowModel1.shallow_model ( * self)) 1 (Seq.length (ShallowModel1.shallow_model ( * self)))) }
    ensures { [#"../src/lib.rs" 98 29 98 30] Inv1.inv result }
    
end
module CargoDir_Impl3_Pop
  type v
  use prelude.Borrow
  use prelude.Ghost
  use seq.Seq
  use prelude.Int
  use seq_ext.SeqExt
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv5 with
    type t = borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v))
  clone TyInv_Trivial as TyInv_Trivial5 with
    type t = borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)),
    predicate Inv0.inv = Inv5.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv4 with
    type t = v
  clone TyInv_Trivial as TyInv_Trivial4 with
    type t = v,
    predicate Inv0.inv = Inv4.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv3 with
    type t = CargoDir_Node_Type.t_node v
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone TyInv_Trivial as TyInv_Trivial3 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv3.inv,
    axiom .
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v)
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v),
    predicate Inv0.inv = Inv2.inv,
    axiom .
  clone CargoDir_Impl1_ShallowModel as ShallowModel3 with
    type v = v
  use seq.Seq
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  use prelude.Ghost
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v)
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v),
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel0 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CargoDir_Impl2_ShallowModel as ShallowModel2 with
    type v = v,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl7_ShallowModel as ShallowModel1 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve3 with
    type self = CargoDir_Node_Type.t_node v
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve2 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve1 with
    type self = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap0 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv1.inv,
    predicate Inv1.inv = Inv3.inv
  clone Core_Option_Impl0_Take_Interface as Take0 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv5.inv,
    predicate Inv1.inv = Inv1.inv
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v)
  let rec cfg pop [#"../src/lib.rs" 98 4 98 30] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v)) : v
    requires {[#"../src/lib.rs" 95 15 95 30] Seq.length (ShallowModel1.shallow_model self) > 0}
    requires {[#"../src/lib.rs" 98 20 98 24] Inv2.inv self}
    ensures { [#"../src/lib.rs" 96 14 96 32] result = Seq.get (ShallowModel1.shallow_model self) 0 }
    ensures { [#"../src/lib.rs" 97 4 97 72] Seq.(==) (ShallowModel2.shallow_model ( ^ self)) (SeqExt.subsequence (ShallowModel2.shallow_model ( * self)) 1 (Seq.length (ShallowModel2.shallow_model ( * self)))) }
    ensures { [#"../src/lib.rs" 98 29 98 30] Inv4.inv result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : v;
  var self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v) = self;
  var pre : Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v);
  var h : CargoDir_Node_Type.t_node v;
  var _8 : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
  var _9 : borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v));
  {
    goto BB0
  }
  BB0 {
    pre <- ([#"../src/lib.rs" 104 18 104 31] Ghost.new ( * self));
    goto BB1
  }
  BB1 {
    assert { [@expl:type invariant] Inv0.inv pre };
    assume { Resolve0.resolve pre };
    _9 <- Borrow.borrow_mut (CargoDir_LinkedList_Type.linkedlist_head ( * self));
    self <- { self with current = (let CargoDir_LinkedList_Type.C_LinkedList a =  * self in CargoDir_LinkedList_Type.C_LinkedList ( ^ _9)) };
    assume { Inv1.inv ( ^ _9) };
    _8 <- ([#"../src/lib.rs" 105 16 105 32] Take0.take _9);
    _9 <- any borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v));
    goto BB2
  }
  BB2 {
    h <- ([#"../src/lib.rs" 105 16 105 41] Unwrap0.unwrap _8);
    _8 <- any Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
    goto BB3
  }
  BB3 {
    assert { [@expl:assertion] [#"../src/lib.rs" 107 8 115 10] let CargoDir_Node_Type.C_Node v next = h in Seq.(==) (ShallowModel0.shallow_model h) (Seq.(++) (Seq.singleton v) (match (next) with
      | Core_Option_Option_Type.C_Some n -> ShallowModel0.shallow_model n
      | Core_Option_Option_Type.C_None -> Seq.empty 
      end)) };
    goto BB4
  }
  BB4 {
    goto BB5
  }
  BB5 {
    self <- { self with current = (let CargoDir_LinkedList_Type.C_LinkedList a =  * self in CargoDir_LinkedList_Type.C_LinkedList (CargoDir_Node_Type.node_next h)) };
    h <- (let CargoDir_Node_Type.C_Node a b = h in CargoDir_Node_Type.C_Node a (any Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)));
    assert { [@expl:type invariant] Inv1.inv (CargoDir_LinkedList_Type.linkedlist_head ( * self)) };
    assume { Resolve1.resolve (CargoDir_LinkedList_Type.linkedlist_head ( * self)) };
    assert { [@expl:type invariant] Inv2.inv self };
    assume { Resolve2.resolve self };
    goto BB7
  }
  BB7 {
    _0 <- CargoDir_Node_Type.node_v h;
    h <- (let CargoDir_Node_Type.C_Node a b = h in CargoDir_Node_Type.C_Node (any v) b);
    assert { [@expl:type invariant] Inv3.inv h };
    assume { Resolve3.resolve h };
    goto BB8
  }
  BB8 {
    return _0
  }
  
end
module CreusotContracts_Model_Impl5_ShallowModel_Stub
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Model_Impl5_ShallowModel_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Model_Impl5_ShallowModel
  type t
  use prelude.Borrow
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_ShallowModel_ShallowModel_Stub as ShallowModel0 with
    type self = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot/creusot-contracts/src/model.rs" 83 8 83 31] ShallowModel0.shallow_model self
  val shallow_model (self : t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Ghost_Impl1_ShallowModel_Stub
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
end
module CreusotContracts_Ghost_Impl1_ShallowModel_Interface
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
  val shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Ghost_Impl1_ShallowModel
  type t
  use prelude.Ghost
  clone CreusotContracts_Model_ShallowModel_ShallowModelTy_Type as ShallowModelTy0 with
    type self = t
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = t,
    type ShallowModelTy0.shallowModelTy = ShallowModelTy0.shallowModelTy
  function shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy =
    [#"../../../../creusot/creusot-contracts/src/ghost.rs" 26 20 26 48] ShallowModel0.shallow_model (Ghost.inner self)
  val shallow_model (self : Ghost.ghost_ty t) : ShallowModelTy0.shallowModelTy
    ensures { result = shallow_model self }
    
end
module CargoDir_Impl3_Push_Interface
  type v
  use prelude.Borrow
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CargoDir_Impl2_ShallowModel_Stub as ShallowModel0 with
    type v = v
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = v
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v)
  val push [#"../src/lib.rs" 142 4 142 32] (self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v)) (v : v) : ()
    requires {[#"../src/lib.rs" 142 21 142 25] Inv0.inv self}
    requires {[#"../src/lib.rs" 142 27 142 28] Inv1.inv v}
    ensures { [#"../src/lib.rs" 141 4 141 67] Seq.(==) (ShallowModel0.shallow_model ( ^ self)) (Seq.(++) (Seq.singleton v) (ShallowModel0.shallow_model ( * self))) }
    
end
module CargoDir_Impl3_Push
  type v
  use prelude.Borrow
  use prelude.Ghost
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv5 with
    type t = CargoDir_Node_Type.t_node v
  clone TyInv_Trivial as TyInv_Trivial5 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv5.inv,
    axiom .
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv4 with
    type t = borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v))
  clone TyInv_Trivial as TyInv_Trivial4 with
    type t = borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)),
    predicate Inv0.inv = Inv4.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv3 with
    type t = v
  clone TyInv_Trivial as TyInv_Trivial3 with
    type t = v,
    predicate Inv0.inv = Inv3.inv,
    axiom .
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v)
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist v),
    predicate Inv0.inv = Inv2.inv,
    axiom .
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CargoDir_Impl1_ShallowModel as ShallowModel2 with
    type v = v
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel0 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CargoDir_Impl2_ShallowModel as ShallowModel3 with
    type v = v,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel4 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  use prelude.Ghost
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v)
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v),
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Resolve_Impl1_Resolve as Resolve1 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone CargoDir_Impl0_New_Interface as New0 with
    type v = v,
    predicate Inv0.inv = Inv3.inv,
    predicate Inv1.inv = Inv1.inv,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model,
    function ShallowModel1.shallow_model = ShallowModel0.shallow_model,
    predicate Inv2.inv = Inv5.inv
  clone CreusotContracts_Ghost_Impl1_ShallowModel as ShallowModel1 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone Core_Option_Impl0_Take_Interface as Take0 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv4.inv,
    predicate Inv1.inv = Inv1.inv
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v)
  let rec cfg push [#"../src/lib.rs" 142 4 142 32] [@cfg:stackify] [@cfg:subregion_analysis] (self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v)) (v : v) : ()
    requires {[#"../src/lib.rs" 142 21 142 25] Inv2.inv self}
    requires {[#"../src/lib.rs" 142 27 142 28] Inv3.inv v}
    ensures { [#"../src/lib.rs" 141 4 141 67] Seq.(==) (ShallowModel3.shallow_model ( ^ self)) (Seq.(++) (Seq.singleton v) (ShallowModel3.shallow_model ( * self))) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var self : borrowed (CargoDir_LinkedList_Type.t_linkedlist v) = self;
  var v : v = v;
  var pre : Ghost.ghost_ty (CargoDir_LinkedList_Type.t_linkedlist v);
  var next : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
  var _7 : borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v));
  var n : CargoDir_Node_Type.t_node v;
  {
    goto BB0
  }
  BB0 {
    goto BB1
  }
  BB1 {
    pre <- ([#"../src/lib.rs" 144 18 144 31] Ghost.new ( * self));
    goto BB2
  }
  BB2 {
    assert { [@expl:type invariant] Inv0.inv pre };
    assume { Resolve0.resolve pre };
    _7 <- Borrow.borrow_mut (CargoDir_LinkedList_Type.linkedlist_head ( * self));
    self <- { self with current = (let CargoDir_LinkedList_Type.C_LinkedList a =  * self in CargoDir_LinkedList_Type.C_LinkedList ( ^ _7)) };
    assume { Inv1.inv ( ^ _7) };
    next <- ([#"../src/lib.rs" 145 19 145 35] Take0.take _7);
    _7 <- any borrowed (Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v));
    goto BB3
  }
  BB3 {
    assert { [@expl:assertion] [#"../src/lib.rs" 147 12 150 13] match (next) with
      | Core_Option_Option_Type.C_Some n -> Seq.(==) (ShallowModel0.shallow_model n) (ShallowModel1.shallow_model pre)
      | Core_Option_Option_Type.C_None -> true
      end };
    goto BB4
  }
  BB4 {
    n <- ([#"../src/lib.rs" 152 16 152 34] New0.new v next);
    v <- any v;
    next <- any Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
    goto BB5
  }
  BB5 {
    assert { [@expl:assertion] [#"../src/lib.rs" 153 8 161 10] let CargoDir_Node_Type.C_Node vv next = n in Seq.(==) (ShallowModel2.shallow_model n) (Seq.(++) (Seq.singleton vv) (match (next) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some nn -> ShallowModel2.shallow_model nn
      end)) };
    goto BB6
  }
  BB6 {
    goto BB7
  }
  BB7 {
    goto BB8
  }
  BB8 {
    goto BB9
  }
  BB9 {
    self <- { self with current = (let CargoDir_LinkedList_Type.C_LinkedList a =  * self in CargoDir_LinkedList_Type.C_LinkedList (Core_Option_Option_Type.C_Some n)) };
    n <- any CargoDir_Node_Type.t_node v;
    goto BB11
  }
  BB11 {
    assert { [@expl:type invariant] Inv2.inv self };
    assume { Resolve1.resolve self };
    assert { [@expl:assertion] [#"../src/lib.rs" 163 8 175 10] let CargoDir_LinkedList_Type.C_LinkedList head =  * self in match (head) with
      | Core_Option_Option_Type.C_Some n1 -> let CargoDir_Node_Type.C_Node v next = n1 in Seq.(==) (ShallowModel0.shallow_model n1) (Seq.(++) (Seq.singleton v) (match (next) with
        | Core_Option_Option_Type.C_Some n2 -> ShallowModel0.shallow_model n2
        | Core_Option_Option_Type.C_None -> Seq.empty 
        end))
      | Core_Option_Option_Type.C_None -> true
      end };
    _0 <- ();
    goto BB12
  }
  BB12 {
    goto BB13
  }
  BB13 {
    goto BB14
  }
  BB14 {
    return _0
  }
  
end
module CargoDir_Impl3_Index_Interface
  type v
  use prelude.UIntSize
  use seq.Seq
  use prelude.Int
  use prelude.Borrow
  use seq.Seq
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = v
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone CreusotContracts_Model_Impl5_ShallowModel_Stub as ShallowModel0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v
  val index [#"../src/lib.rs" 181 4 181 40] (self : CargoDir_LinkedList_Type.t_linkedlist v) (ix : usize) : v
    requires {[#"../src/lib.rs" 178 15 178 32] UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    requires {[#"../src/lib.rs" 179 15 179 44] 0 <= UIntSize.to_int ix /\ UIntSize.to_int ix < Seq.length (ShallowModel0.shallow_model self)}
    requires {[#"../src/lib.rs" 181 18 181 22] Inv0.inv self}
    ensures { [#"../src/lib.rs" 180 14 180 35] result = Seq.get (ShallowModel0.shallow_model self) (UIntSize.to_int ix) }
    ensures { [#"../src/lib.rs" 181 38 181 40] Inv1.inv result }
    
end
module CargoDir_Impl3_Index
  type v
  use prelude.Int
  use prelude.UIntSize
  use prelude.Borrow
  use seq.Seq
  use seq_ext.SeqExt
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv4 with
    type t = v
  clone TyInv_Trivial as TyInv_Trivial4 with
    type t = v,
    predicate Inv0.inv = Inv4.inv,
    axiom .
  use CargoDir_Node_Type as CargoDir_Node_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv3 with
    type t = CargoDir_Node_Type.t_node v
  clone TyInv_Trivial as TyInv_Trivial3 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv3.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = CargoDir_Node_Type.t_node v
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = CargoDir_Node_Type.t_node v,
    predicate Inv0.inv = Inv2.inv,
    axiom .
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  use seq.Seq
  clone CargoDir_Impl1_ShallowModel as ShallowModel2 with
    type v = v
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel3 with
    type t = CargoDir_Node_Type.t_node v,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CargoDir_Impl2_ShallowModel as ShallowModel4 with
    type v = v,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    predicate Inv0.inv = Inv0.inv,
    axiom .
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve4 with
    type self = v
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve3 with
    type self = CargoDir_Node_Type.t_node v
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve2 with
    type self = CargoDir_Node_Type.t_node v
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve1 with
    type self = Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v)
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel1 with
    type t = CargoDir_LinkedList_Type.t_linkedlist v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel4.shallow_model
  clone CreusotContracts_Model_Impl5_ShallowModel as ShallowModel0 with
    type t = CargoDir_Node_Type.t_node v,
    type ShallowModelTy0.shallowModelTy = Seq.seq v,
    function ShallowModel0.shallow_model = ShallowModel3.shallow_model
  clone CreusotContracts_Resolve_Resolve_Resolve_Interface as Resolve0 with
    type self = CargoDir_LinkedList_Type.t_linkedlist v
  let rec cfg index [#"../src/lib.rs" 181 4 181 40] [@cfg:stackify] [@cfg:subregion_analysis] (self : CargoDir_LinkedList_Type.t_linkedlist v) (ix : usize) : v
    requires {[#"../src/lib.rs" 178 15 178 32] UIntSize.to_int ix < Seq.length (ShallowModel1.shallow_model self)}
    requires {[#"../src/lib.rs" 179 15 179 44] 0 <= UIntSize.to_int ix /\ UIntSize.to_int ix < Seq.length (ShallowModel1.shallow_model self)}
    requires {[#"../src/lib.rs" 181 18 181 22] Inv0.inv self}
    ensures { [#"../src/lib.rs" 180 14 180 35] result = Seq.get (ShallowModel1.shallow_model self) (UIntSize.to_int ix) }
    ensures { [#"../src/lib.rs" 181 38 181 40] Inv4.inv result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : v;
  var self : CargoDir_LinkedList_Type.t_linkedlist v = self;
  var ix : usize = ix;
  var cur : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
  var i : usize;
  var c : CargoDir_Node_Type.t_node v;
  var next : Core_Option_Option_Type.t_option (CargoDir_Node_Type.t_node v);
  var _19 : CargoDir_Node_Type.t_node v;
  var c1 : CargoDir_Node_Type.t_node v;
  var v : v;
  var _31 : CargoDir_Node_Type.t_node v;
  {
    goto BB0
  }
  BB0 {
    cur <- CargoDir_LinkedList_Type.linkedlist_head self;
    assert { [@expl:type invariant] Inv0.inv self };
    assume { Resolve0.resolve self };
    i <- ([#"../src/lib.rs" 183 27 183 28] (0 : usize));
    goto BB1
  }
  BB1 {
    invariant { [#"../src/lib.rs" 184 20 184 40] 0 <= UIntSize.to_int i /\ UIntSize.to_int i <= UIntSize.to_int ix };
    invariant { [#"../src/lib.rs" 185 20 188 9] match (cur) with
      | Core_Option_Option_Type.C_Some c -> Seq.(==) (ShallowModel0.shallow_model c) (SeqExt.subsequence (ShallowModel1.shallow_model self) (UIntSize.to_int i) (Seq.length (ShallowModel1.shallow_model self)))
      | Core_Option_Option_Type.C_None -> false
      end };
    goto BB2
  }
  BB2 {
    switch ([#"../src/lib.rs" 189 14 189 20] i < ix)
      | False -> goto BB8
      | True -> goto BB3
      end
  }
  BB3 {
    switch (cur)
      | Core_Option_Option_Type.C_None -> goto BB4
      | Core_Option_Option_Type.C_Some _ -> goto BB5
      end
  }
  BB4 {
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    absurd
  }
  BB5 {
    goto BB7
  }
  BB6 {
    absurd
  }
  BB7 {
    c <- Core_Option_Option_Type.some_0 cur;
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    _19 <- c;
    assert { [@expl:type invariant] Inv2.inv c };
    assume { Resolve2.resolve c };
    next <- CargoDir_Node_Type.node_next _19;
    assert { [@expl:type invariant] Inv3.inv _19 };
    assume { Resolve3.resolve _19 };
    assert { [@expl:type invariant] Inv1.inv next };
    assume { Resolve1.resolve next };
    cur <- next;
    i <- ([#"../src/lib.rs" 197 12 197 18] i + ([#"../src/lib.rs" 197 17 197 18] (1 : usize)));
    goto BB1
  }
  BB8 {
    assert { [@expl:assertion] [#"../src/lib.rs" 201 22 204 9] match (cur) with
      | Core_Option_Option_Type.C_Some c -> Seq.(==) (ShallowModel0.shallow_model c) (SeqExt.subsequence (ShallowModel1.shallow_model self) (UIntSize.to_int i) (Seq.length (ShallowModel1.shallow_model self)))
      | Core_Option_Option_Type.C_None -> false
      end };
    switch (cur)
      | Core_Option_Option_Type.C_None -> goto BB9
      | Core_Option_Option_Type.C_Some _ -> goto BB10
      end
  }
  BB9 {
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    absurd
  }
  BB10 {
    goto BB11
  }
  BB11 {
    c1 <- Core_Option_Option_Type.some_0 cur;
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    assert { [@expl:assertion] [#"../src/lib.rs" 207 16 215 18] let CargoDir_Node_Type.C_Node vv next = c1 in Seq.(==) (ShallowModel0.shallow_model c1) (Seq.(++) (Seq.singleton vv) (match (next) with
      | Core_Option_Option_Type.C_None -> Seq.empty 
      | Core_Option_Option_Type.C_Some nn -> ShallowModel2.shallow_model nn
      end)) };
    _31 <- c1;
    assert { [@expl:type invariant] Inv2.inv c1 };
    assume { Resolve2.resolve c1 };
    v <- CargoDir_Node_Type.node_v _31;
    assert { [@expl:type invariant] Inv3.inv _31 };
    assume { Resolve3.resolve _31 };
    assert { [@expl:assertion] [#"../src/lib.rs" 218 30 218 73] v = Seq.get (SeqExt.subsequence (ShallowModel1.shallow_model self) (UIntSize.to_int i) (Seq.length (ShallowModel1.shallow_model self))) 0 };
    _0 <- v;
    assert { [@expl:type invariant] Inv4.inv v };
    assume { Resolve4.resolve v };
    return _0
  }
  BB13 {
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    goto BB6
  }
  BB14 {
    assert { [@expl:type invariant] Inv1.inv cur };
    assume { Resolve1.resolve cur };
    goto BB6
  }
  
end
module CargoDir_Main_Interface
  val main [#"../src/lib.rs" 226 0 226 9] (_1 : ()) : ()
end
module CargoDir_Main
  use prelude.Int
  use prelude.Int32
  use prelude.Borrow
  use seq.Seq
  use CargoDir_Node_Type as CargoDir_Node_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CargoDir_Impl1_ShallowModel as ShallowModel2 with
    type v = int32
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = int32
  clone TyInv_Trivial as TyInv_Trivial2 with
    type t = int32,
    predicate Inv0.inv = Inv2.inv,
    axiom .
  use CargoDir_LinkedList_Type as CargoDir_LinkedList_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist int32)
  clone TyInv_Trivial as TyInv_Trivial1 with
    type t = borrowed (CargoDir_LinkedList_Type.t_linkedlist int32),
    predicate Inv0.inv = Inv1.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist int32
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = CargoDir_LinkedList_Type.t_linkedlist int32,
    predicate Inv0.inv = Inv0.inv,
    axiom .
  use seq.Seq
  use Alloc_Alloc_Global_Type as Alloc_Alloc_Global_Type
  clone CreusotContracts_Std1_Boxed_Impl1_ShallowModel as ShallowModel1 with
    type t = CargoDir_Node_Type.t_node int32,
    type a = Alloc_Alloc_Global_Type.t_global,
    type ShallowModelTy0.shallowModelTy = Seq.seq int32,
    function ShallowModel0.shallow_model = ShallowModel2.shallow_model
  clone CargoDir_Impl2_ShallowModel as ShallowModel0 with
    type v = int32,
    function ShallowModel0.shallow_model = ShallowModel1.shallow_model
  clone CargoDir_Impl3_Push_Interface as Push0 with
    type v = int32,
    predicate Inv0.inv = Inv1.inv,
    predicate Inv1.inv = Inv2.inv,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model
  clone CargoDir_Impl3_New_Interface as New0 with
    type v = int32,
    function ShallowModel0.shallow_model = ShallowModel0.shallow_model,
    predicate Inv0.inv = Inv0.inv
  let rec cfg main [#"../src/lib.rs" 226 0 226 9] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var l1 : CargoDir_LinkedList_Type.t_linkedlist int32;
  var l2 : CargoDir_LinkedList_Type.t_linkedlist int32;
  var l3 : CargoDir_LinkedList_Type.t_linkedlist int32;
  var l4 : CargoDir_LinkedList_Type.t_linkedlist int32;
  var _5 : ();
  var _6 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _7 : ();
  var _8 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _9 : ();
  var _10 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _11 : ();
  var _12 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _13 : ();
  var _14 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _15 : ();
  var _16 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _17 : ();
  var _18 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _19 : ();
  var _20 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _21 : ();
  var _22 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _23 : ();
  var _24 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _25 : ();
  var _26 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _27 : ();
  var _28 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _29 : ();
  var _30 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _31 : ();
  var _32 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _33 : ();
  var _34 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _35 : ();
  var _36 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _37 : ();
  var _38 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _39 : ();
  var _40 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _41 : ();
  var _42 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _43 : ();
  var _44 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _45 : ();
  var _46 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _47 : ();
  var _48 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _49 : ();
  var _50 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _51 : ();
  var _52 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _53 : ();
  var _54 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _55 : ();
  var _56 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _57 : ();
  var _58 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _59 : ();
  var _60 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _61 : ();
  var _62 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _63 : ();
  var _64 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _65 : ();
  var _66 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _67 : ();
  var _68 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _69 : ();
  var _70 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _71 : ();
  var _72 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _73 : ();
  var _74 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _75 : ();
  var _76 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _77 : ();
  var _78 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _79 : ();
  var _80 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _81 : ();
  var _82 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _83 : ();
  var _84 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _85 : ();
  var _86 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _87 : ();
  var _88 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _89 : ();
  var _90 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _91 : ();
  var _92 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _93 : ();
  var _94 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _95 : ();
  var _96 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _97 : ();
  var _98 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _99 : ();
  var _100 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _101 : ();
  var _102 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _103 : ();
  var _104 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _105 : ();
  var _106 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _107 : ();
  var _108 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _109 : ();
  var _110 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _111 : ();
  var _112 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _113 : ();
  var _114 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  var _115 : ();
  var _116 : borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
  {
    goto BB0
  }
  BB0 {
    l1 <- ([#"../src/lib.rs" 227 17 227 34] New0.new ());
    goto BB1
  }
  BB1 {
    l2 <- ([#"../src/lib.rs" 228 17 228 34] New0.new ());
    goto BB2
  }
  BB2 {
    l3 <- ([#"../src/lib.rs" 229 17 229 34] New0.new ());
    goto BB3
  }
  BB3 {
    l4 <- ([#"../src/lib.rs" 230 17 230 34] New0.new ());
    goto BB4
  }
  BB4 {
    _6 <- Borrow.borrow_mut l1;
    l1 <-  ^ _6;
    _5 <- ([#"../src/lib.rs" 232 4 232 14] Push0.push _6 ([#"../src/lib.rs" 232 12 232 13] (0 : int32)));
    _6 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB5
  }
  BB5 {
    _8 <- Borrow.borrow_mut l2;
    l2 <-  ^ _8;
    _7 <- ([#"../src/lib.rs" 233 4 233 14] Push0.push _8 ([#"../src/lib.rs" 233 12 233 13] (0 : int32)));
    _8 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB6
  }
  BB6 {
    _10 <- Borrow.borrow_mut l3;
    l3 <-  ^ _10;
    _9 <- ([#"../src/lib.rs" 234 4 234 14] Push0.push _10 ([#"../src/lib.rs" 234 12 234 13] (0 : int32)));
    _10 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB7
  }
  BB7 {
    _12 <- Borrow.borrow_mut l4;
    l4 <-  ^ _12;
    _11 <- ([#"../src/lib.rs" 235 4 235 14] Push0.push _12 ([#"../src/lib.rs" 235 12 235 13] (0 : int32)));
    _12 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB8
  }
  BB8 {
    _14 <- Borrow.borrow_mut l1;
    l1 <-  ^ _14;
    _13 <- ([#"../src/lib.rs" 237 4 237 14] Push0.push _14 ([#"../src/lib.rs" 237 12 237 13] (1 : int32)));
    _14 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB9
  }
  BB9 {
    _16 <- Borrow.borrow_mut l2;
    l2 <-  ^ _16;
    _15 <- ([#"../src/lib.rs" 238 4 238 14] Push0.push _16 ([#"../src/lib.rs" 238 12 238 13] (1 : int32)));
    _16 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB10
  }
  BB10 {
    _18 <- Borrow.borrow_mut l3;
    l3 <-  ^ _18;
    _17 <- ([#"../src/lib.rs" 239 4 239 14] Push0.push _18 ([#"../src/lib.rs" 239 12 239 13] (1 : int32)));
    _18 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB11
  }
  BB11 {
    _20 <- Borrow.borrow_mut l4;
    l4 <-  ^ _20;
    _19 <- ([#"../src/lib.rs" 240 4 240 14] Push0.push _20 ([#"../src/lib.rs" 240 12 240 13] (1 : int32)));
    _20 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB12
  }
  BB12 {
    _22 <- Borrow.borrow_mut l1;
    l1 <-  ^ _22;
    _21 <- ([#"../src/lib.rs" 242 4 242 14] Push0.push _22 ([#"../src/lib.rs" 242 12 242 13] (2 : int32)));
    _22 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB13
  }
  BB13 {
    _24 <- Borrow.borrow_mut l2;
    l2 <-  ^ _24;
    _23 <- ([#"../src/lib.rs" 243 4 243 14] Push0.push _24 ([#"../src/lib.rs" 243 12 243 13] (2 : int32)));
    _24 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB14
  }
  BB14 {
    _26 <- Borrow.borrow_mut l3;
    l3 <-  ^ _26;
    _25 <- ([#"../src/lib.rs" 244 4 244 14] Push0.push _26 ([#"../src/lib.rs" 244 12 244 13] (2 : int32)));
    _26 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB15
  }
  BB15 {
    _28 <- Borrow.borrow_mut l4;
    l4 <-  ^ _28;
    _27 <- ([#"../src/lib.rs" 245 4 245 14] Push0.push _28 ([#"../src/lib.rs" 245 12 245 13] (2 : int32)));
    _28 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB16
  }
  BB16 {
    _30 <- Borrow.borrow_mut l1;
    l1 <-  ^ _30;
    _29 <- ([#"../src/lib.rs" 247 4 247 14] Push0.push _30 ([#"../src/lib.rs" 247 12 247 13] (3 : int32)));
    _30 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB17
  }
  BB17 {
    _32 <- Borrow.borrow_mut l2;
    l2 <-  ^ _32;
    _31 <- ([#"../src/lib.rs" 248 4 248 14] Push0.push _32 ([#"../src/lib.rs" 248 12 248 13] (3 : int32)));
    _32 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB18
  }
  BB18 {
    _34 <- Borrow.borrow_mut l3;
    l3 <-  ^ _34;
    _33 <- ([#"../src/lib.rs" 249 4 249 14] Push0.push _34 ([#"../src/lib.rs" 249 12 249 13] (3 : int32)));
    _34 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB19
  }
  BB19 {
    _36 <- Borrow.borrow_mut l4;
    l4 <-  ^ _36;
    _35 <- ([#"../src/lib.rs" 250 4 250 14] Push0.push _36 ([#"../src/lib.rs" 250 12 250 13] (3 : int32)));
    _36 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB20
  }
  BB20 {
    _38 <- Borrow.borrow_mut l1;
    l1 <-  ^ _38;
    _37 <- ([#"../src/lib.rs" 252 4 252 14] Push0.push _38 ([#"../src/lib.rs" 252 12 252 13] (4 : int32)));
    _38 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB21
  }
  BB21 {
    _40 <- Borrow.borrow_mut l2;
    l2 <-  ^ _40;
    _39 <- ([#"../src/lib.rs" 253 4 253 14] Push0.push _40 ([#"../src/lib.rs" 253 12 253 13] (4 : int32)));
    _40 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB22
  }
  BB22 {
    _42 <- Borrow.borrow_mut l3;
    l3 <-  ^ _42;
    _41 <- ([#"../src/lib.rs" 254 4 254 14] Push0.push _42 ([#"../src/lib.rs" 254 12 254 13] (4 : int32)));
    _42 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB23
  }
  BB23 {
    _44 <- Borrow.borrow_mut l4;
    l4 <-  ^ _44;
    _43 <- ([#"../src/lib.rs" 255 4 255 14] Push0.push _44 ([#"../src/lib.rs" 255 12 255 13] (4 : int32)));
    _44 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB24
  }
  BB24 {
    _46 <- Borrow.borrow_mut l1;
    l1 <-  ^ _46;
    _45 <- ([#"../src/lib.rs" 257 4 257 14] Push0.push _46 ([#"../src/lib.rs" 257 12 257 13] (5 : int32)));
    _46 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB25
  }
  BB25 {
    _48 <- Borrow.borrow_mut l2;
    l2 <-  ^ _48;
    _47 <- ([#"../src/lib.rs" 258 4 258 14] Push0.push _48 ([#"../src/lib.rs" 258 12 258 13] (5 : int32)));
    _48 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB26
  }
  BB26 {
    _50 <- Borrow.borrow_mut l3;
    l3 <-  ^ _50;
    _49 <- ([#"../src/lib.rs" 259 4 259 14] Push0.push _50 ([#"../src/lib.rs" 259 12 259 13] (5 : int32)));
    _50 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB27
  }
  BB27 {
    _52 <- Borrow.borrow_mut l4;
    l4 <-  ^ _52;
    _51 <- ([#"../src/lib.rs" 260 4 260 14] Push0.push _52 ([#"../src/lib.rs" 260 12 260 13] (5 : int32)));
    _52 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB28
  }
  BB28 {
    _54 <- Borrow.borrow_mut l1;
    l1 <-  ^ _54;
    _53 <- ([#"../src/lib.rs" 262 4 262 14] Push0.push _54 ([#"../src/lib.rs" 262 12 262 13] (6 : int32)));
    _54 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB29
  }
  BB29 {
    _56 <- Borrow.borrow_mut l2;
    l2 <-  ^ _56;
    _55 <- ([#"../src/lib.rs" 263 4 263 14] Push0.push _56 ([#"../src/lib.rs" 263 12 263 13] (6 : int32)));
    _56 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB30
  }
  BB30 {
    _58 <- Borrow.borrow_mut l3;
    l3 <-  ^ _58;
    _57 <- ([#"../src/lib.rs" 264 4 264 14] Push0.push _58 ([#"../src/lib.rs" 264 12 264 13] (6 : int32)));
    _58 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB31
  }
  BB31 {
    _60 <- Borrow.borrow_mut l4;
    l4 <-  ^ _60;
    _59 <- ([#"../src/lib.rs" 265 4 265 14] Push0.push _60 ([#"../src/lib.rs" 265 12 265 13] (6 : int32)));
    _60 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB32
  }
  BB32 {
    _62 <- Borrow.borrow_mut l1;
    l1 <-  ^ _62;
    _61 <- ([#"../src/lib.rs" 267 4 267 14] Push0.push _62 ([#"../src/lib.rs" 267 12 267 13] (7 : int32)));
    _62 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB33
  }
  BB33 {
    _64 <- Borrow.borrow_mut l2;
    l2 <-  ^ _64;
    _63 <- ([#"../src/lib.rs" 268 4 268 14] Push0.push _64 ([#"../src/lib.rs" 268 12 268 13] (7 : int32)));
    _64 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB34
  }
  BB34 {
    _66 <- Borrow.borrow_mut l3;
    l3 <-  ^ _66;
    _65 <- ([#"../src/lib.rs" 269 4 269 14] Push0.push _66 ([#"../src/lib.rs" 269 12 269 13] (7 : int32)));
    _66 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB35
  }
  BB35 {
    _68 <- Borrow.borrow_mut l4;
    l4 <-  ^ _68;
    _67 <- ([#"../src/lib.rs" 270 4 270 14] Push0.push _68 ([#"../src/lib.rs" 270 12 270 13] (7 : int32)));
    _68 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB36
  }
  BB36 {
    _70 <- Borrow.borrow_mut l1;
    l1 <-  ^ _70;
    _69 <- ([#"../src/lib.rs" 272 4 272 14] Push0.push _70 ([#"../src/lib.rs" 272 12 272 13] (8 : int32)));
    _70 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB37
  }
  BB37 {
    _72 <- Borrow.borrow_mut l2;
    l2 <-  ^ _72;
    _71 <- ([#"../src/lib.rs" 273 4 273 14] Push0.push _72 ([#"../src/lib.rs" 273 12 273 13] (8 : int32)));
    _72 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB38
  }
  BB38 {
    _74 <- Borrow.borrow_mut l3;
    l3 <-  ^ _74;
    _73 <- ([#"../src/lib.rs" 274 4 274 14] Push0.push _74 ([#"../src/lib.rs" 274 12 274 13] (8 : int32)));
    _74 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB39
  }
  BB39 {
    _76 <- Borrow.borrow_mut l4;
    l4 <-  ^ _76;
    _75 <- ([#"../src/lib.rs" 275 4 275 14] Push0.push _76 ([#"../src/lib.rs" 275 12 275 13] (8 : int32)));
    _76 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB40
  }
  BB40 {
    _78 <- Borrow.borrow_mut l1;
    l1 <-  ^ _78;
    _77 <- ([#"../src/lib.rs" 277 4 277 14] Push0.push _78 ([#"../src/lib.rs" 277 12 277 13] (9 : int32)));
    _78 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB41
  }
  BB41 {
    _80 <- Borrow.borrow_mut l2;
    l2 <-  ^ _80;
    _79 <- ([#"../src/lib.rs" 278 4 278 14] Push0.push _80 ([#"../src/lib.rs" 278 12 278 13] (9 : int32)));
    _80 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB42
  }
  BB42 {
    _82 <- Borrow.borrow_mut l3;
    l3 <-  ^ _82;
    _81 <- ([#"../src/lib.rs" 279 4 279 14] Push0.push _82 ([#"../src/lib.rs" 279 12 279 13] (9 : int32)));
    _82 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB43
  }
  BB43 {
    _84 <- Borrow.borrow_mut l4;
    l4 <-  ^ _84;
    _83 <- ([#"../src/lib.rs" 280 4 280 14] Push0.push _84 ([#"../src/lib.rs" 280 12 280 13] (9 : int32)));
    _84 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB44
  }
  BB44 {
    _86 <- Borrow.borrow_mut l1;
    l1 <-  ^ _86;
    _85 <- ([#"../src/lib.rs" 282 4 282 15] Push0.push _86 ([#"../src/lib.rs" 282 12 282 14] (10 : int32)));
    _86 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB45
  }
  BB45 {
    _88 <- Borrow.borrow_mut l2;
    l2 <-  ^ _88;
    _87 <- ([#"../src/lib.rs" 283 4 283 15] Push0.push _88 ([#"../src/lib.rs" 283 12 283 14] (10 : int32)));
    _88 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB46
  }
  BB46 {
    _90 <- Borrow.borrow_mut l3;
    l3 <-  ^ _90;
    _89 <- ([#"../src/lib.rs" 284 4 284 15] Push0.push _90 ([#"../src/lib.rs" 284 12 284 14] (10 : int32)));
    _90 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB47
  }
  BB47 {
    _92 <- Borrow.borrow_mut l4;
    l4 <-  ^ _92;
    _91 <- ([#"../src/lib.rs" 285 4 285 15] Push0.push _92 ([#"../src/lib.rs" 285 12 285 14] (10 : int32)));
    _92 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB48
  }
  BB48 {
    _94 <- Borrow.borrow_mut l1;
    l1 <-  ^ _94;
    _93 <- ([#"../src/lib.rs" 287 4 287 15] Push0.push _94 ([#"../src/lib.rs" 287 12 287 14] (11 : int32)));
    _94 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB49
  }
  BB49 {
    _96 <- Borrow.borrow_mut l2;
    l2 <-  ^ _96;
    _95 <- ([#"../src/lib.rs" 288 4 288 15] Push0.push _96 ([#"../src/lib.rs" 288 12 288 14] (11 : int32)));
    _96 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB50
  }
  BB50 {
    _98 <- Borrow.borrow_mut l3;
    l3 <-  ^ _98;
    _97 <- ([#"../src/lib.rs" 289 4 289 15] Push0.push _98 ([#"../src/lib.rs" 289 12 289 14] (11 : int32)));
    _98 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB51
  }
  BB51 {
    _100 <- Borrow.borrow_mut l4;
    l4 <-  ^ _100;
    _99 <- ([#"../src/lib.rs" 290 4 290 15] Push0.push _100 ([#"../src/lib.rs" 290 12 290 14] (11 : int32)));
    _100 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB52
  }
  BB52 {
    _102 <- Borrow.borrow_mut l1;
    l1 <-  ^ _102;
    _101 <- ([#"../src/lib.rs" 292 4 292 15] Push0.push _102 ([#"../src/lib.rs" 292 12 292 14] (12 : int32)));
    _102 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB53
  }
  BB53 {
    _104 <- Borrow.borrow_mut l2;
    l2 <-  ^ _104;
    _103 <- ([#"../src/lib.rs" 293 4 293 15] Push0.push _104 ([#"../src/lib.rs" 293 12 293 14] (12 : int32)));
    _104 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB54
  }
  BB54 {
    _106 <- Borrow.borrow_mut l3;
    l3 <-  ^ _106;
    _105 <- ([#"../src/lib.rs" 294 4 294 15] Push0.push _106 ([#"../src/lib.rs" 294 12 294 14] (12 : int32)));
    _106 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB55
  }
  BB55 {
    _108 <- Borrow.borrow_mut l4;
    l4 <-  ^ _108;
    _107 <- ([#"../src/lib.rs" 295 4 295 15] Push0.push _108 ([#"../src/lib.rs" 295 12 295 14] (12 : int32)));
    _108 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB56
  }
  BB56 {
    _110 <- Borrow.borrow_mut l1;
    l1 <-  ^ _110;
    _109 <- ([#"../src/lib.rs" 297 4 297 15] Push0.push _110 ([#"../src/lib.rs" 297 12 297 14] (13 : int32)));
    _110 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB57
  }
  BB57 {
    _112 <- Borrow.borrow_mut l2;
    l2 <-  ^ _112;
    _111 <- ([#"../src/lib.rs" 298 4 298 15] Push0.push _112 ([#"../src/lib.rs" 298 12 298 14] (13 : int32)));
    _112 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB58
  }
  BB58 {
    _114 <- Borrow.borrow_mut l3;
    l3 <-  ^ _114;
    _113 <- ([#"../src/lib.rs" 299 4 299 15] Push0.push _114 ([#"../src/lib.rs" 299 12 299 14] (13 : int32)));
    _114 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB59
  }
  BB59 {
    _116 <- Borrow.borrow_mut l4;
    l4 <-  ^ _116;
    _115 <- ([#"../src/lib.rs" 300 4 300 15] Push0.push _116 ([#"../src/lib.rs" 300 12 300 14] (13 : int32)));
    _116 <- any borrowed (CargoDir_LinkedList_Type.t_linkedlist int32);
    goto BB60
  }
  BB60 {
    _0 <- ();
    goto BB61
  }
  BB61 {
    goto BB62
  }
  BB62 {
    goto BB63
  }
  BB63 {
    goto BB64
  }
  BB64 {
    return _0
  }
  
end
module CargoDir_Impl1
  type v
end
module CargoDir_Impl2
  type v
end
